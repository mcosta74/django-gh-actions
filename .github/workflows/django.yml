name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
        
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        pipenv install --dev --deploy

    - name: Prepare test results
      run: |
        mkdir -p test_results/
        
    - name: Run Linter
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pipenv run flake8 project --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pipenv run flake8 project --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --output-file test_results/flake8-project.txt

    - name: Run Tests
      run: |
        pipenv run pytest project --junitxml=test_results/pytest-project.xml
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.0.1
      with:
        # Artifact name
        # A file, directory or wildcard pattern that describes what to upload
        path: test_results/
