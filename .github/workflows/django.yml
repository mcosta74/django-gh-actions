name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install pip-tools
      run: |
        pip install --upgrade pip
        pip install pip-tools

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('project/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('project/requirements/*.txt') }}

    - name: Install Dependencies
      run: |
        pip-sync project/requirements/base.txt project/requirements/dev.txt

    - name: Prepare test results
      run: |
        mkdir -p out/tests
        
    - name: Run Linter
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 project --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 project --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --output-file out/tests/flake8-project.txt

    - name: Run Tests
      run: |
        pytest project --junitxml=out/tests/pytest-project.xml
        
    - name: Archive Linter results
      uses: actions/upload-artifact@v2.0.1
      with:
        name: flake8-results
        # A file, directory or wildcard pattern that describes what to upload
        path: out/tests/flake8-*.txt

    - name: Archive Test results
      uses: actions/upload-artifact@v2.0.1
      with:
        name: pytest-results
        # A file, directory or wildcard pattern that describes what to upload
        path: out/tests/pytest-*.xml
